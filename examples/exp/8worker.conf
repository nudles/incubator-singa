cluster {
  nworker_groups: 1
  nserver_groups: 1
  nworkers_per_group: 8
}

model {
  name: "cifar10-convnet"
  train_steps: 50
  #70000
  #test_steps: 100
  #test_frequency:1000
  display_frequency: 0
  alg: kBackPropagation
  updater{
    weight_decay:0.004
    lr_change: kFixedStep
    type: kSGD
    fixedstep_conf:{
      step:0
      step:60000
      step:65000
      step_lr:0.001
      step_lr:0.0001
      step_lr:0.00001
    }
  }
  neuralnet {
  layer{
    name: "data"
    type: kShardData
    sharddata_conf {
      path: "examples/cifar10/cifar10_train_shard"
      batchsize: 256
      #random_skip: 5000
    }
    exclude: kTest
  }
  layer{
    name: "data"
    type: kShardData
    sharddata_conf {
      path: "examples/cifar10/cifar10_test_shard"
      batchsize: 100
    }
    exclude: kTrain
  }
  layer{
    name:"rgb"
    type: kRGBImage
    srclayers: "data"
    rgbimage_conf {
      meanfile: "examples/cifar10/image_mean.bin"
    }
  }
  layer{
    name: "label"
    type: kLabel
    srclayers: "data"
  }

  layer {
    name: "conv1"
    type: kCaffeConv
    srclayers: "rgb"
    convolution_conf {
      num_filters: 32
      kernel: 5
      stride: 1
      pad:2
    }
    param {
      name: "w1"
      init_method:kGaussian
      std:0.0001
      learning_rate_multiplier:1.0
    }
    param {
      name: "b1"
      init_method: kConstant
      learning_rate_multiplier:2.0
      value:0
    }
  }

  layer {
    name: "pool1"
    type: kCaffePooling
    srclayers: "conv1"
    pooling_conf {
      pool: MAX
      kernel: 3
      stride: 2
    }
  }
  layer {
    name: "relu1"
    type: kReLU
    srclayers:"pool1"
  }
  layer {
    name: "norm1"
    type: kLRN
    lrn_conf {
      norm_region: WITHIN_CHANNEL
      local_size: 3
      alpha: 5e-05
      beta: 0.75
    }
    srclayers:"relu1"
  }
  layer {
    name: "conv2"
    type: kCaffeConv
    srclayers: "norm1"
    convolution_conf {
      num_filters: 32
      kernel: 5
      stride: 1
      pad:2
    }
    param {
      name: "w2"
      init_method:kGaussian
      std:0.01
      learning_rate_multiplier:1.0
    }
    param {
      name: "b2"
      init_method: kConstant
      learning_rate_multiplier:2.0
      value:0
    }
  }
  layer {
    name: "relu2"
    type: kReLU
    srclayers:"conv2"
  }
  layer {
    name: "pool2"
    type: kCaffePooling
    srclayers: "relu2"
    pooling_conf {
      pool: MAX
      kernel: 3
      stride: 2
    }
  }
  layer {
    name: "norm2"
    type: kLRN
    lrn_conf {
      norm_region: WITHIN_CHANNEL
      local_size: 3
      alpha: 5e-05
      beta: 0.75
    }
    srclayers:"pool2"
  }
  layer {
    name: "conv3"
    type: kCaffeConv
    srclayers: "norm2"
    convolution_conf {
      num_filters: 64
      kernel: 5
      stride: 1
      pad:2
    }
    param {
      name: "w3"
      init_method:kGaussian
      std:0.01
    }
    param {
      name: "b3"
      init_method: kConstant
      value:0
    }
  }
  layer {
    name: "relu3"
    type: kReLU
    srclayers:"conv3"
  }
  layer {
    name: "pool3"
    type: kCaffePooling
    srclayers: "relu3"
    pooling_conf {
      pool: AVE
      kernel: 3
      stride: 2
    }
  }
  layer {
    name: "ip1"
    type: kInnerProduct
    srclayers:"pool3"
    innerproduct_conf {
      num_output: 10
    }
    param {
      name: "w4"
      init_method:kGaussian
      std:0.01
      learning_rate_multiplier:1.0
      weight_decay_multiplier:250
    }
    param {
      name: "b4"
      init_method: kConstant
      learning_rate_multiplier:2.0
      weight_decay_multiplier:0
      value:0
    }
  }

  layer{
    name: "loss"
    type: kSoftmaxLoss
    softmaxloss_conf{
      topk:1
    }
    srclayers:"ip1"
    srclayers: "label"
  }
}
}
