name: "alexnet"
#450000
train_steps: 20
#test_steps: 1000
#test_freq: 1000
disp_freq: 0
num_openblas_threads: 1
#checkpoint_path: "examples/cifar10/checkpoint/step1000-worker0"
train_one_batch {
  alg: kBP
}
updater{
  type: kSGD
  weight_decay:0.0005
  momentum: 0.9
  learning_rate {
    type: kStep
    base_lr: 0.01
    step_conf {
      gamma: 0.1
      change_freq: 100000
    }
  }
}

neuralnet {
  layer{
    name: "data"
    type: kRecordInput
    store_conf {
      backend: "kvfile"
      path: "/ssd/wangwei/imagenet/train_data.bin"
      mean_file: "/ssd/wangwei/imagenet/image_mean.bin"
      batchsize: 256
      shape: 3
      shape: 256
      shape: 256
    }
  }
  layer {
    name: "transform"
    type: kImagePreprocess
    srclayers: "data"
    rgbimage_conf {
      mirror: true
      cropsize:227
    }
  }
  layer {
    name: "conv1"
    type: kCConvolution
    srclayers: "transform"
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_conf {
      num_filters: 96
      kernel: 11
      stride: 4
    }
    param {
      name: "conv1-w"
      init {
        type: kGaussian
        std: 0.01
      }
    }
    param {
      name: "conv1-b"
      lr_scale: 2
      wd_scale: 0
      init {
        type: kConstant
        value: 0
      }
    }
  }
  layer {
    name: "relu1"
    type: kReLU
    srclayers: "conv1"
  }
  layer {
    name: "pool1"
    type: kCPooling
    srclayers: "relu1"
    pooling_conf {
      pool: MAX
      kernel: 3
      stride: 2
    }
  }
  layer {
    name: "norm1"
    type: kLRN
    srclayers: "pool1"
    lrn_conf {
      local_size: 5
      alpha: 0.0001
      beta: 0.75
    }
  }
  layer {
    name: "conv2"
    type: kCConvolution
    srclayers: "norm1"
    convolution_conf {
      num_filters: 256
      kernel: 5
      pad: 2
    }
    param {
      name: "conv2-w"
      init {
        type: kGaussian
        std: 0.01
      }
    }
    param {
      name: "conv2-b"
      lr_scale: 2
      wd_scale: 0
      init {
        type: kConstant
        value: 1
      }
    }
  }
  layer {
    name: "relu2"
    type: kReLU
    srclayers: "conv2"
  }

  layer {
    name: "pool2"
    type: kCPooling
    srclayers: "relu2"
    pooling_conf {
      pool: MAX
      kernel_size: 3
      stride: 2
    }
  }
  layer {
    name: "norm2"
    type: kLRN
    srclayers: "pool2"
    lrn_conf {
      local_size: 5
      alpha: 0.0001
      beta: 0.75
    }
  }
  layer {
    name: "conv3"
    type: kCConvolution
    srclayers: "norm2"
    convolution_conf {
      num_filters: 384
      pad: 1
      kernel_size: 3
    }
    param {
      name: "conv3-w"
      init {
        type: kGaussian
        std: 0.01
      }
    }
    param {
      name: "conv3-b"
      lr_scale: 2
      wd_scale: 0
      init {
        type: kConstant
        value: 0
      }
    }
  }
  layer {
    name: "relu3"
    type: kReLU
    srclayers: "conv3"
  }
  layer {
    name: "conv4"
    type: kCConvolution
    srclayers: "conv3"
    convolution_conf {
      num_filters: 384
      pad: 1
      kernel: 3
    }
    param {
      name: "conv4-w"
      init {
        type: kGaussian
        std: 0.01
      }
    }
    param {
      name: "conv4-b"
      lr_scale: 2
      wd_scale: 0
      init {
        type: kConstant
        value: 1
      }
    }
  }
  layer {
    name: "relu4"
    type: kReLU
    srclayers: "conv4"
  }
  layer {
    name: "conv5"
    type: kCConvolution
    srclayers: "relu4"
    convolution_conf {
      num_filters: 256
      pad: 1
      kernel_size: 3
    }
    param {
      name: "conv5-w"
      init {
        type: kGaussian
        std: 0.01
      }
    }
    param {
      name: "conv5-b"
      lr_scale: 2
      wd_scale: 0
      init {
        type: kConstant
        value: 1
      }
    }
  }
  layer {
    name: "relu5"
    type: kReLU
    srclayers: "conv5"
  }
  layer {
    name: "pool5"
    type: kPooling
    srclayers: "relu5"
    pooling_conf {
      pool: MAX
      kernel: 3
      stride: 2
    }
  }
  layer {
    name: "fc6"
    type: kInnerProduct
    srclayers: "pool5"
    inner_product_conf {
      num_output: 4096
    }
    param {
      name: "fc6-w"
      init {
        type: kGaussian
        std: 0.005
      }
    }
    param {
      name: "fc6-b"
      lr_scale: 2
      wd_scale: 0
      init {
        type: kConstant
        value: 1
      }
    }
  }
  layer {
    name: "relu6"
    type: kReLU
    srclayers: "fc6"
  }
  layer {
    name: "drop6"
    type: kDropout
    srclayers: "relu6"
    dropout_conf {
      dropout_ratio: 0.5
    }
  }
  layer {
    name: "fc7"
    type: kInnerProduct
    srclayers: "drop6"
    inner_product_conf {
      num_output: 4096
    }
    param {
      name: "fc7-w"
      init {
        type: kGaussian
        std: 0.005
      }
    }
    param {
      name: "fc7-b"
      lr_scale: 2
      wd_scale: 0
      init {
        type: kConstant
        value: 1
      }
    }
  }
  layer {
    name: "relu7"
    type: kReLU
    srclayers: "fc7"
  }
  layer {
    name: "drop7"
    type: kDropout
    srclayers: "relu7"
    dropout_conf {
      dropout_ratio: 0.5
    }
  }
  layer {
    name: "fc8"
    type: kInnerProduct
    srclayers: "drop7"
    inner_product_conf {
      num_output: 1000
    }
    param {
      name: "fc8-w"
      init {
        type: kGaussian
        std: 0.01
      }
    }
    param {
      name: "fc8-b"
      lr_scale: 2
      wd_scale: 0
      init {
        type: kConstant
        value: 0
      }
    }
  }
  layer {
    name: "loss"
    type: SoftmaxLoss
    srclayers: "fc8"
    srclayers: "label"
  }
}

cluster {
  nworker_groups: 1
  nserver_groups: 1
  workspace:"/data/wangwei/imagenet"
}
